/**************
FILE          : mouse.ycp
***************
PROJECT       : YaST2
              :
AUTHOR        : Marcus Schäfer <ms@suse.de>
              :
BELONGS TO    : YaST2
              : (GPM mouse configuration module)
              :
DESCRIPTION   : mouse.ycp is the first instance called in
              : front of the inst_mouse.ycp configuration module
              : we will handle the reprobe case here and the
              : return value from the configuration module which
              : is needed to restore the mouse in special cases
              :
              :
STATUS        : Development
**************/
{
textdomain "mouse";

import "Mouse";
import "Mode";
import "Wizard";

import "Popup";
include "ui/common_functions.ycp";
import "Label";

//==========================================
// Memorize the current mouse.
//------------------------------------------
string mouse_on_entry = Mouse::mouse;

//==========================================
// Check if this is a reconfiguration run.
//------------------------------------------
y2milestone( "Mode::reprobe %1 Mouse:%2", Mode::reprobe, Mouse::mouse );
if( Mode::reprobe ) 
    {
    if( Mouse::mouse != "ignore" )
	{
	string hwupdate = "/usr/X11R6/lib/sax/tools/hwupdate";
	string mouseID = Mouse::Probe();
	if (mouseID == "none") 
	    {
	    Mouse::mouse = "none";
	    }
	Mouse::Set( Mouse::mouse );
	SCR::Execute ( .target.bash, hwupdate + " --mouse");
	}
    else 
	{
	}
    }

if( !Mode::reprobe || Mouse::mouse != "ignore" )
    {
    //==========================================
    // create the wizard dialog
    //------------------------------------------
    Wizard::CreateDialog();

    //==========================================
    // check if no mouse is connected
    //------------------------------------------
    if( Mode::reprobe && (Mouse::mouse=="none") ) 
	{
	// popup text
	Popup::TimedMessage( _("No mouse connected to the system..."), 10);
	y2milestone ( "No mouse detected --> unchanged" );
	return UI::CloseDialog();
	}

    //==========================================
    // call inst_mouse and init list according
    // to the sysconfig variables
    //------------------------------------------
    any result = nil;
    result =  WFM::CallFunction ( `inst_mouse( true, true ) );

    //==========================================
    // handle result value from the config
    //------------------------------------------
    if( result == `next ) 
	{
	// ...
	// User accepted the the setting.
	// Only if the user has chosen a different mouse change the
	// system configuration.
	// ---
	y2milestone("User selected new mouse: <%1>", Mouse::mouse );
	Mouse::Save();
	}
    else 
	{
	// ...
	// `cancel or `back selected
	// ---
	y2milestone( "User cancelled --> no change" );
	}

    return UI::CloseDialog();
    }
else
    {
    return( true );
    }
}
