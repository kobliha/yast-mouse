/**************
FILE          : mouse_proposal.ycp
***************
PROJECT       : YaST2
              :
AUTHOR        : Marcus Sch√§fer <ms@suse.de>
              :
BELONGS TO    : YaST2 - Mouse information proposal for the GPM
              :
DESCRIPTION   : Proposal function dispatcher for
              : GPM mouse configuration
              :
              :
STATUS        : Development
**************/
/*! \brief YaST2 - GPM configuration interface
*
 * File:        proposal/mouse_proposal.ycp
 * Package:     GPM Configuration
 * Summary:     Installation Proposal for GPM mouse
 * Authors:     Marcus Schaefer <ms@suse.de>
 *
 */
{
textdomain "mouse";

import "Mouse";
import "Linuxrc";

//===================================================
// Initialize proposal parameters
//---------------------------------------------------
string func  = (string) WFM::Args(0);
map    param = (map) WFM::Args(1);
map    ret   = $[];

//===================================================
// Handle installation environment
//---------------------------------------------------
if (! Linuxrc::text ()) {
	if ( func != "Description" ) {
		ret = $[
			"rich_text_title"       : "",
			"menu_title"            : "",
			"id"                    : "",
			"preformatted_proposal" : "<b> </b>",
			"success"               : true
		];
		return ret;
	} else {
		return ret;
	}
}
//===================================================
// Create proposal for installation/configuration...
//---------------------------------------------------
if ( func == "MakeProposal" ) {
	boolean force_reset      = param["force_reset"     ]:false;
	boolean language_changed = param["language_changed"]:false;
	ret = $[
		"raw_proposal" : [Mouse::MakeProposal( force_reset, language_changed )],
		"language_changed": false
	];
}

//===================================================
// Handle user requests...
//---------------------------------------------------
else if ( func == "AskUser" ) {
	boolean has_next = param["has_next"]:false;
	symbol result = (symbol)WFM::CallFunction ("inst_mouse", [true, has_next]);
	ret = $[
		"workflow_sequence" : result,
		"language_changed"  : false
	];
}

//===================================================
// Handle proposal description...
//---------------------------------------------------
else if ( func == "Description" ) {
	ret = $[
		"rich_text_title" :	_( "Mouse"  ),
		"menu_title"	  :	_( "&Mouse" ),
		"id"		      :	"mouse_stuff"
	];
}
return ret;
}
